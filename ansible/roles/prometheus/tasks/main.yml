---
- name: Create prometheus dirs
  file:
    path: '{{ item }}'
    state: directory
    mode: 0770
    group: docker
  with_items:
    - '{{ prometheus_dir }}'
    - '{{ prometheus_dir }}/config'
    - '{{ prometheus_dir }}/config/rules'
    - '{{ prometheus_dir }}/config/data'
    

- name: Template prometheus.yml
  template:
    src: prometheus.yml.j2
    dest: '{{ prometheus_dir }}/config/prometheus.yml'
    mode: 0660
    group: docker

- name: Copy rules
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0660
    group: docker
  with_items:
    - src: recording_rules.yml
      dest: '{{ prometheus_dir }}/config/rules/recording_rules.yml'
    - src: alerting_rules.yml
      dest: '{{ prometheus_dir }}/config/rules/alerting_rules.yml'

- name: Pull docker image
  docker_image:
    name: '{{ prometheus_image }}'
    force: true

- name: Check config
  docker_container:
    image: '{{ prometheus_image }}'
    name: '{{ prometheus_container_name }}'
    entrypoint: ''
    user: 1000
    command:
      - promtool
      - check
      - config
      - '{{ prometheus_dir }}/config/prometheus.yml'
    detach: false
    cleanup: true
    volumes:
      - '{{ prometheus_dir }}/config/:{{ prometheus_dir }}/config/'

- name: Start container
  docker_container:
    image: '{{ prometheus_image }}'
    name: '{{ prometheus_container_name }}'
    networks:
      - name: monitoring
    detach: true
    cleanup: false
    restart_policy: unless-stopped
    ports:
      - '9090:9090'
    command:
      - '--config.file={{ prometheus_dir }}/config/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=90d'
    volumes:
      - '{{ prometheus_dir }}/config/:{{ prometheus_dir }}/config/'
      - '{{ prometheus_dir }}:/prometheus'
    restart: true
    user: 1000
